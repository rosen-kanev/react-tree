var __defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(e,t,r)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,__spreadValues=(e,t)=>{for(var r in t||(t={}))__hasOwnProp.call(t,r)&&__defNormalProp(e,r,t[r]);if(__getOwnPropSymbols)for(var r of __getOwnPropSymbols(t))__propIsEnum.call(t,r)&&__defNormalProp(e,r,t[r]);return e},__spreadProps=(e,t)=>__defProps(e,__getOwnPropDescs(t)),__objRest=(e,t)=>{var r={};for(var a in e)__hasOwnProp.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&__getOwnPropSymbols)for(var a of __getOwnPropSymbols(e))t.indexOf(a)<0&&__propIsEnum.call(e,a)&&(r[a]=e[a]);return r};!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactTree=t(e.React)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=t(e);const a=e.createContext({selected:null,focused:null,expanded:[],onItemSelect(){},renderLabel(){}});a.displayName="TreeContext";const n=t=>{const{selected:l,focused:o,expanded:d,onItemSelect:s,renderLabel:u}=e.useContext(a),i=t.nodes.length>0,c=i?d.includes(t.id):null;return r.default.createElement("li",{role:"treeitem",tabIndex:o===t.id?0:-1,"aria-expanded":c,"aria-selected":l===t.id||null,"data-id":`treeitem-${t.id}`,"data-id-type":typeof t.id},"function"==typeof u?u(__spreadProps(__spreadValues({},t),{isExpanded:c,isExpandable:i,toggleItem(){s(t.id,i)}})):r.default.createElement("div",{onClick:()=>s(t.id,i)},t.label),c&&i&&r.default.createElement("ul",{role:"group"},t.nodes.map((e=>r.default.createElement(n,__spreadProps(__spreadValues({},e),{key:e.id}))))))},l=({value:t,defaultValue:r,onChange:a})=>{const[n,l]=e.useState(r),o=void 0===t,d=o?n:t,s=e.useCallback((e=>{const t="function"==typeof e?e(d):e;o&&l(t),a(t)}),[o,a,d]);return[d,s]},o=()=>{};return function(t){var d=t,{nodes:s,defaultFocused:u,focused:i,onFocusChange:c=o,defaultExpanded:p=[],expanded:f,onExpandChange:_=o,defaultSelected:m,selected:b,onSelect:y=o,renderLabel:x}=d,g=__objRest(d,["nodes","defaultFocused","focused","onFocusChange","defaultExpanded","expanded","onExpandChange","defaultSelected","selected","onSelect","renderLabel"]);const P=e.useRef(null),[E,h]=l({defaultValue:void 0===u&&s.length>0?s[0].id:void 0,value:i,onChange:c}),[v,w]=l({defaultValue:p,value:f,onChange:_}),[O,S]=l({defaultValue:m,value:b,onChange:y}),C=(e,t)=>{t&&w(v.includes(e)?v.filter((t=>t!==e)):v.concat(e)),h(e),S(e)},I=e=>{const t=P.current.querySelectorAll('[role="treeitem"]');let r;for(let a=0;a<t.length;a++){if(0===t[a].tabIndex){r=e?t[a-1]:t[a+1];break}}if(r){const e=r.dataset.id.replace("treeitem-",""),t=r.dataset.idType;h("number"===t?Number(e):e),r.focus(),r.firstElementChild.scrollIntoView({block:"center"})}},k=e=>{const t=P.current.querySelector(`[data-id="treeitem-${e}"]`);return{treeItem:t,isExpandable:t.hasAttribute("aria-expanded"),isExpanded:"true"===t.getAttribute("aria-expanded")}},V=e=>{if(e){e.focus(),e.firstElementChild.scrollIntoView({block:"center"});const t=e.dataset.id.replace("treeitem-",""),r=e.dataset.idType;h("number"===r?Number(t):t)}};return r.default.createElement(a.Provider,{value:{selected:O,focused:E,expanded:v,onItemSelect:C,renderLabel:x}},r.default.createElement("ul",__spreadProps(__spreadValues({ref:P,role:"tree"},g),{onKeyDown:e=>{if(s.length&&!e.altKey&&!e.ctrlKey&&!e.metaKey)if("ArrowUp"===e.key)e.preventDefault(),I(!0);else if("ArrowDown"===e.key)e.preventDefault(),I(!1);else if("ArrowLeft"===e.key){e.preventDefault();const{treeItem:t,isExpandable:r,isExpanded:a}=k(E);r&&a?w(v.filter((e=>e!==E))):V(t.closest('[role="treeitem"]:not([tabindex="0"])'))}else if("ArrowRight"===e.key){e.preventDefault();const{treeItem:t,isExpandable:r,isExpanded:a}=k(E);r&&(a?V(t.querySelector('[role="treeitem"]')):w(v.concat(E)))}else if("Enter"===e.key||" "===e.key){e.preventDefault();const t=P.current.querySelector(`[data-id="treeitem-${E}"]`).hasAttribute("aria-expanded");C(E,t)}}}),s.map((e=>r.default.createElement(n,__spreadProps(__spreadValues({},e),{key:e.id}))))))}}));
