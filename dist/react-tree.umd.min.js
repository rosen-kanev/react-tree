!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("react"),require("prop-types")):"function"==typeof define&&define.amd?define(["react","prop-types"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactTree=t(e.React)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=t(e);function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const l=()=>{},d=e=>void 0===e,a=(e,t)=>{const r=[...e];for(;r.length;){const e=r.pop();if(e.id===t)return e;r.push(...e.nodes)}return null},o=(e,t)=>{const r=t.id;if(!((e,t)=>{if(Object.is(e,t))return!0;const r=Object.keys(e).filter((e=>"expanded"!==e&&"onItemSelect"!==e)),n=Object.keys(t).filter((e=>"expanded"!==e&&"onItemSelect"!==e));if(r.length!==n.length)return!1;for(const n of r)if(!Object.prototype.hasOwnProperty.call(t,n)||!Object.is(e[n],t[n]))return!1;return!0})(e,t))return!1;if(e.expanded.includes(r)!==t.expanded.includes(r))return!1;if(t.expanded.includes(r)){const r=(e=>{const t=[...e],r=[];for(;t.length;){const e=t.pop();r.push(e.id),t.push(...e.nodes)}return r})(t.nodes);for(const n of r)if(e.expanded.includes(n)!==t.expanded.includes(n))return!1}return!0},i=({onItemSelect:e,renderLabel:t,expanded:l,...d})=>{const a=d.nodes.length>0,o=a?l.includes(d.id):null;return r.default.createElement("li",{role:"treeitem",tabIndex:-1,"aria-expanded":o,"data-id":`treeitem-${d.id}`},"function"==typeof t?t({...d,isExpanded:o,isExpandable:a,toggleItem(){e(d.id,a)}}):r.default.createElement("div",{onClick:()=>e(d.id,a)},d.label),o&&a&&r.default.createElement("ul",{role:"group"},d.nodes.map((d=>r.default.createElement(c,n({},d,{expanded:l,onItemSelect:e,renderLabel:t,key:d.id}))))))},c=r.default.memo(i,o),s=(t,r)=>{const[n,l]=e.useState(r),a=d(t),o=a?n:t;return[o,e.useCallback((e=>{a&&l(e)}),[a,o])]},u=({nodes:t,defaultFocused:o,focused:i,onFocusChange:u=l,defaultExpanded:f=[],expanded:p,onExpandChange:m=l,defaultSelected:b,selected:y,onSelectChange:x=l,renderLabel:h,expandOnSelect:E=!0,...g})=>{const S=e.useRef(null),k=d(i)?d(o)&&t.length>0?t[0].id:o:void 0,[v,I]=s(i,k),[A,q]=s(p,f),[w,O]=s(y,b);e.useEffect((()=>{const e=S.current.querySelector(`[data-id="treeitem-${v}"]`),t=S.current.querySelector('[tabindex="0"]');t&&t.setAttribute("tabindex","-1"),e&&e.setAttribute("tabindex","0")}),[v]),e.useEffect((()=>{const e=S.current.querySelector(`[data-id="treeitem-${w}"]`),t=S.current.querySelector('[aria-selected="true"]');t&&t.removeAttribute("aria-selected"),e&&e.setAttribute("aria-selected","true")}),[w]);const j=(e,r)=>{const n=a(t,e);E&&r&&(q((t=>t.includes(e)?t.filter((t=>t!==e)):t.concat(e))),m(n)),I(e),u(n),O(e),x(n)},C=e=>{const r=S.current.querySelectorAll('[role="treeitem"]');let n;for(let t=0;t<r.length;t++){if(0===r[t].tabIndex){n=e?r[t-1]:r[t+1];break}}if(n){const e=n.dataset.id.replace("treeitem-",""),r=a(t,e);I(e),u(r),n.focus(),n.firstElementChild.scrollIntoView({block:"center"})}},D=e=>{const t=S.current.querySelector(`[data-id="treeitem-${e}"]`);return{treeItem:t,isExpandable:t.hasAttribute("aria-expanded"),isExpanded:"true"===t.getAttribute("aria-expanded")}},L=e=>{if(e){e.focus(),e.firstElementChild.scrollIntoView({block:"center"});const r=e.dataset.id.replace("treeitem-",""),n=a(t,r);I(r),u(n)}};return r.default.createElement("ul",n({role:"tree",onKeyDown:e=>{if(t.length&&!e.altKey&&!e.ctrlKey&&!e.metaKey)if("ArrowUp"===e.key)e.preventDefault(),C(!0);else if("ArrowDown"===e.key)e.preventDefault(),C(!1);else if("ArrowLeft"===e.key){e.preventDefault();const{treeItem:r,isExpandable:n,isExpanded:l}=D(v);if(n&&l){const e=a(t,v);q((e=>e.filter((e=>e!==v)))),m(e)}else L(r.closest('[role="treeitem"]:not([tabindex="0"])'))}else if("ArrowRight"===e.key){e.preventDefault();const{treeItem:r,isExpandable:n,isExpanded:l}=D(v);if(n)if(l)L(r.querySelector('[role="treeitem"]'));else{const e=a(t,v);q((e=>e.concat(v))),m(e)}}else if("Enter"===e.key||" "===e.key){e.preventDefault();const t=S.current.querySelector(`[data-id="treeitem-${v}"]`).hasAttribute("aria-expanded");j(v,t)}}},g,{ref:S}),t.map((e=>r.default.createElement(c,n({},e,{expanded:A,onItemSelect:j,renderLabel:h,key:e.id})))))};return e.memo(u)}));
//# sourceMappingURL=react-tree.umd.min.js.map
