!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("react"),require("prop-types")):"function"==typeof define&&define.amd?define(["react","prop-types"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactTree=t(e.React)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=t(e);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e}).apply(this,arguments)}const r=e.createContext({selected:null,focused:null,expanded:[],onItemSelect(){},renderLabel(){}});r.displayName="TreeContext";const a=t=>{const{selected:o,focused:d,expanded:i,onItemSelect:u,renderLabel:c}=e.useContext(r),f=t.nodes.length>0,s=f?i.includes(t.id):null;return n.default.createElement("li",{role:"treeitem",tabIndex:d===t.id?0:-1,"aria-expanded":s,"aria-selected":o===t.id||null,"data-id":`treeitem-${t.id}`},"function"==typeof c?c({...t,isExpanded:s,isExpandable:f,toggleItem(){u(t.id,f)}}):n.default.createElement("div",{onClick:()=>u(t.id,f)},t.label),s&&f&&n.default.createElement("ul",{role:"group"},t.nodes.map((e=>n.default.createElement(a,l({},e,{key:e.id}))))))},o=({value:t,defaultValue:n,onChange:l})=>{const[r,a]=e.useState(n),o=void 0===t,d=o?r:t,i=e.useCallback((e=>{const t="function"==typeof e?e(d):e;o&&a(t),l(t)}),[o,l,d]);return[d,i]},d=()=>{},i=({nodes:t,defaultFocused:i,focused:u,onFocusChange:c,defaultExpanded:f=[],expanded:s,onExpandChange:p=d,defaultSelected:m,selected:y,onSelectChange:x=d,renderLabel:b,...h})=>{const g=e.useRef(null),[E,v]=o({defaultValue:void 0===i&&t.length>0?t[0].id:void 0,value:u,onChange:"function"==typeof c?c:d}),[C,k]=o({defaultValue:f,value:s,onChange:"function"==typeof p?p:d}),[I,S]=o({defaultValue:m,value:y,onChange:"function"==typeof x?x:d}),w=(e,t)=>{t&&k(C.includes(e)?C.filter((t=>t!==e)):C.concat(e)),v(e),S(e)},A=e=>{const t=g.current.querySelectorAll('[role="treeitem"]');let n;for(let l=0;l<t.length;l++){if(0===t[l].tabIndex){n=e?t[l-1]:t[l+1];break}}if(n){const e=n.dataset.id.replace("treeitem-","");v(e),n.focus(),n.firstElementChild.scrollIntoView({block:"center"})}},D=e=>{const t=g.current.querySelector(`[data-id="treeitem-${e}"]`);return{treeItem:t,isExpandable:t.hasAttribute("aria-expanded"),isExpanded:"true"===t.getAttribute("aria-expanded")}},q=e=>{if(e){e.focus(),e.firstElementChild.scrollIntoView({block:"center"});const t=e.dataset.id.replace("treeitem-","");v(t)}};return n.default.createElement(r.Provider,{value:{selected:I,focused:E,expanded:C,onItemSelect:w,renderLabel:b}},n.default.createElement("ul",l({role:"tree",onKeyDown:e=>{if(t.length&&!e.altKey&&!e.ctrlKey&&!e.metaKey)if("ArrowUp"===e.key)e.preventDefault(),A(!0);else if("ArrowDown"===e.key)e.preventDefault(),A(!1);else if("ArrowLeft"===e.key){e.preventDefault();const{treeItem:t,isExpandable:n,isExpanded:l}=D(E);n&&l?k(C.filter((e=>e!==E))):q(t.closest('[role="treeitem"]:not([tabindex="0"])'))}else if("ArrowRight"===e.key){e.preventDefault();const{treeItem:t,isExpandable:n,isExpanded:l}=D(E);n&&(l?q(t.querySelector('[role="treeitem"]')):k(C.concat(E)))}else if("Enter"===e.key||" "===e.key){e.preventDefault();const t=g.current.querySelector(`[data-id="treeitem-${E}"]`).hasAttribute("aria-expanded");w(E,t)}}},h,{ref:g}),t.map((e=>n.default.createElement(a,l({},e,{key:e.id}))))))};return e.memo(i)}));
//# sourceMappingURL=react-tree.umd.min.js.map
