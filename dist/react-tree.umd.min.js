!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("react"),require("prop-types")):"function"==typeof define&&define.amd?define(["react","prop-types"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactTree=t(e.React)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=t(e);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var a=e.createContext({selected:null,focused:null,expanded:[],onItemSelect:function(){},renderLabel:function(){}});a.displayName="TreeContext";var l=function t(l){var o=e.useContext(a),d=o.selected,u=o.focused,i=o.expanded,f=o.onItemSelect,c=o.renderLabel,s=l.nodes.length>0,p=s?i.includes(l.id):null;return n.default.createElement("li",{role:"treeitem",tabIndex:u===l.id?0:-1,"aria-expanded":p,"aria-selected":d===l.id||null,"data-id":"treeitem-"+l.id},"function"==typeof c?c(r({},l,{isExpanded:p,isExpandable:s,toggleItem:function(){f(l.id,s)}})):n.default.createElement("div",{onClick:function(){return f(l.id,s)}},l.label),p&&s&&n.default.createElement("ul",{role:"group"},l.nodes.map((function(e){return n.default.createElement(t,r({},e,{key:e.id}))}))))},o=function(t){var n=t.value,r=t.defaultValue,a=t.onChange,l=e.useState(r),o=l[0],d=l[1],u=void 0===n,i=u?o:n,f=e.useCallback((function(e){var t="function"==typeof e?e(i):e;u&&d(t),a(t)}),[u,a,i]);return[i,f]},d=["nodes","defaultFocused","focused","onFocusChange","defaultExpanded","expanded","onExpandChange","defaultSelected","selected","onSelectChange","renderLabel"],u=function(){},i=function(t){var i=t.nodes,f=t.defaultFocused,c=t.focused,s=t.onFocusChange,p=t.defaultExpanded,v=void 0===p?[]:p,m=t.expanded,y=t.onExpandChange,x=void 0===y?u:y,b=t.defaultSelected,h=t.selected,g=t.onSelectChange,E=void 0===g?u:g,C=t.renderLabel,k=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(t,d),S=e.useRef(null),I=o({defaultValue:void 0===f&&i.length>0?i[0].id:void 0,value:c,onChange:"function"==typeof s?s:u}),w=I[0],A=I[1],D=o({defaultValue:v,value:m,onChange:"function"==typeof x?x:u}),q=D[0],L=D[1],V=o({defaultValue:b,value:h,onChange:"function"==typeof E?E:u}),j=V[0],O=V[1],F=function(e,t){t&&L(q.includes(e)?q.filter((function(t){return t!==e})):q.concat(e)),A(e),O(e)},K=function(e){for(var t,n=S.current.querySelectorAll('[role="treeitem"]'),r=0;r<n.length;r++){if(0===n[r].tabIndex){t=e?n[r-1]:n[r+1];break}}if(t){var a=t.dataset.id.replace("treeitem-","");A(a),t.focus(),t.firstElementChild.scrollIntoView({block:"center"})}},R=function(e){var t=S.current.querySelector('[data-id="treeitem-'+e+'"]');return{treeItem:t,isExpandable:t.hasAttribute("aria-expanded"),isExpanded:"true"===t.getAttribute("aria-expanded")}},T=function(e){if(e){e.focus(),e.firstElementChild.scrollIntoView({block:"center"});var t=e.dataset.id.replace("treeitem-","");A(t)}};return n.default.createElement(a.Provider,{value:{selected:j,focused:w,expanded:q,onItemSelect:F,renderLabel:C}},n.default.createElement("ul",r({role:"tree",onKeyDown:function(e){if(i.length&&!e.altKey&&!e.ctrlKey&&!e.metaKey)if("ArrowUp"===e.key)e.preventDefault(),K(!0);else if("ArrowDown"===e.key)e.preventDefault(),K(!1);else if("ArrowLeft"===e.key){e.preventDefault();var t=R(w),n=t.treeItem,r=t.isExpandable,a=t.isExpanded;r&&a?L(q.filter((function(e){return e!==w}))):T(n.closest('[role="treeitem"]:not([tabindex="0"])'))}else if("ArrowRight"===e.key){e.preventDefault();var l=R(w),o=l.treeItem,d=l.isExpandable,u=l.isExpanded;d&&(u?T(o.querySelector('[role="treeitem"]')):L(q.concat(w)))}else if("Enter"===e.key||" "===e.key){e.preventDefault();var f=S.current.querySelector('[data-id="treeitem-'+w+'"]').hasAttribute("aria-expanded");F(w,f)}}},k,{ref:S}),i.map((function(e){return n.default.createElement(l,r({},e,{key:e.id}))}))))};return e.memo(i)}));
//# sourceMappingURL=react-tree.umd.min.js.map
